# -*- coding: utf-8 -*-
# Generated by Django 1.11.10 on 2018-02-21 19:17
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='TriggerLog',
            fields=[
                ('id', models.BigIntegerField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(editable=False, null=True)),
                ('updated_at', models.DateTimeField(editable=False, null=True)),
                ('processed_at', models.DateTimeField(editable=False, null=True)),
                ('table_name', models.CharField(editable=False, max_length=128)),
                ('record_id', models.BigIntegerField(editable=False)),
                ('sf_id',
                 models.CharField(db_column='sfid', editable=False, max_length=18, null=True)),
                ('action', models.CharField(
                    choices=[('DELETE', 'DELETE'), ('INSERT', 'INSERT'), ('UPDATE', 'UPDATE')],
                    editable=False, max_length=7)),
                ('sf_message', models.TextField(blank=True, editable=False, null=True)),
                ('_values',
                 models.TextField(blank=True, db_column='values', editable=False, null=True)),
                ('_old', models.TextField(blank=True, db_column='old', editable=False, null=True)),
                ('state', models.CharField(
                    choices=[('FAILED', 'FAILED'), ('IGNORE', 'IGNORE'), ('IGNORED', 'IGNORED'),
                             ('MERGED', 'MERGED'), ('NEW', 'NEW'), ('PENDING', 'PENDING'),
                             ('READONLY', 'READONLY'), ('REQUEUE', 'REQUEUE'),
                             ('REQUEUED', 'REQUEUED'), ('SUCCESS', 'SUCCESS')], max_length=8)),
            ],
            options={
                'verbose_name': 'Current Trigger Log',
                'db_table': 'salesforce"."_trigger_log',
                'ordering': ('id',),
                'get_latest_by': 'created_at',
                'abstract': False,
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TriggerLogArchive',
            fields=[
                ('id', models.BigIntegerField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(editable=False, null=True)),
                ('updated_at', models.DateTimeField(editable=False, null=True)),
                ('processed_at', models.DateTimeField(editable=False, null=True)),
                ('table_name', models.CharField(editable=False, max_length=128)),
                ('record_id', models.BigIntegerField(editable=False)),
                ('sf_id',
                 models.CharField(db_column='sfid', editable=False, max_length=18, null=True)),
                ('action', models.CharField(
                    choices=[('DELETE', 'DELETE'), ('INSERT', 'INSERT'), ('UPDATE', 'UPDATE')],
                    editable=False, max_length=7)),
                ('sf_message', models.TextField(blank=True, editable=False, null=True)),
                ('_values',
                 models.TextField(blank=True, db_column='values', editable=False, null=True)),
                ('_old', models.TextField(blank=True, db_column='old', editable=False, null=True)),
                ('state', models.CharField(
                    choices=[('FAILED', 'FAILED'), ('IGNORE', 'IGNORE'), ('IGNORED', 'IGNORED'),
                             ('MERGED', 'MERGED'), ('NEW', 'NEW'), ('PENDING', 'PENDING'),
                             ('READONLY', 'READONLY'), ('REQUEUE', 'REQUEUE'),
                             ('REQUEUED', 'REQUEUED'), ('SUCCESS', 'SUCCESS')], max_length=8)),
            ],
            options={
                'verbose_name': 'Archived Trigger Log',
                'db_table': 'salesforce"."_trigger_log_archive',
                'ordering': ('id',),
                'get_latest_by': 'created_at',
                'abstract': False,
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TriggerLogPermanent',
            fields=[
                ('id', models.BigIntegerField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(editable=False, null=True)),
                ('updated_at', models.DateTimeField(editable=False, null=True)),
                ('processed_at', models.DateTimeField(editable=False, null=True)),
                ('table_name', models.CharField(editable=False, max_length=128)),
                ('record_id', models.BigIntegerField(editable=False)),
                ('sf_id',
                 models.CharField(db_column='sfid', editable=False, max_length=18, null=True)),
                ('action', models.CharField(
                    choices=[('DELETE', 'DELETE'), ('INSERT', 'INSERT'), ('UPDATE', 'UPDATE')],
                    editable=False, max_length=7)),
                ('sf_message', models.TextField(blank=True, editable=False, null=True)),
                ('_values',
                 models.TextField(blank=True, db_column='values', editable=False, null=True)),
                ('_old', models.TextField(blank=True, db_column='old', editable=False, null=True)),
                ('state', models.CharField(
                    choices=[('FAILED', 'FAILED'), ('IGNORE', 'IGNORE'), ('IGNORED', 'IGNORED'),
                             ('MERGED', 'MERGED'), ('NEW', 'NEW'), ('PENDING', 'PENDING'),
                             ('READONLY', 'READONLY'), ('REQUEUE', 'REQUEUE'),
                             ('REQUEUED', 'REQUEUED'), ('SUCCESS', 'SUCCESS')], max_length=8)),
            ],
            options={
                'verbose_name': 'Permanent Trigger Log',
                'ordering': ('id',),
                'get_latest_by': 'created_at',
                'abstract': False,
                'managed': True,
            },
        ),
        migrations.AlterIndexTogether(
            name='triggerlogpermanent',
            index_together=set([('table_name', 'record_id', 'id')]),
        ),
    ]
